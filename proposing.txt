Proposing Successfully

1. Keep it short and punchy.

Most conferences get over a hundred proposals. Put yourself in the shoes of an
organizer who has read 30 abstracts before yours, and wants to do 10 more
before he stops for the day. Think of it as speed dating: you've got 5 minutes
to pique his interest and get him wanting to hear more. Remember that your
proposal should make the reader want to see your talk.


2. Include social proof.

When you give your talks, look for feedback on Twitter (and solicit some if
there isn't any). Save links to the good stuff and include them in your
proposal (quote, plus a link to the original; the link is important). This
technique has two substantial benefits. First, it assuages an organizer's
concern that he's going to pick a bad speaker. It makes his life easier, which
is extremely good for you. Second, since not a lot of speakers will do this, it
will make you stand out from the crowd.


3. Titles matter.

Shoot for intriguing and memorable, in that order. Come up with a couple
candidates for your title and get input from friends. Which talk would YOU
rather hear?


4. Have a good bio.

Do cool stuff and talk about it.


4. Send a follow-up email.

Reach out to the organizers with a friendly email. Tell them you're excited
about your conference and that you'd love to speak. Again, you're trying to
stand out from the masses of eager speakers, so be personable.


Here's a proposal I submitted recently. It was accepted at NordicRuby, which
took only 12 talks from a pool of 113.

Title: What Rubyists should Steal from Haskell and Clojure

Abstract: Ruby is a great little language, but that doesn't mean it got
everything right.  This talk will be a tour of the best features from Clojure
and Haskell that you can't find in Ruby. The goal isn't to try to convert you
to these languages, but to expand your knowledge of the best ideas in
programming language design.  We'll also see how understanding the rationale
behind these features can help you write better Ruby.

If concepts like anaphora, destructuring binds, and monads aren't familiar to
you, prepare to learn some powerful concepts. And don't worry: this won't be
some voice-from-the-clouds, ivory tower tutorial. Just a pragmatic guy teaching
cool ideas with simple examples. No neckbeard required.

Notes to organizers: (Here's where I gush about their conference a litle.)

Then, I include the following quotes, gathered after my most-recent talk:

"@r00k you're one of the best presentors I've ever seen in tech."
https://twitter.com/#!/sayhar/status/165851089860702208

"@r00k and what a presentation it was. i wish you were my public speaking
professor." https://twitter.com/#!/tony_ciampa/status/165954726695944193

"@r00k is killing - calisthenics, comedy, hecklers, and great super-fast coding
w/ vim" https://twitter.com/#!/pattytoland/status/165849474747469824


Bio: Ben has spoken in several countries and in multiple languages, in venues
varying from tiny conference rooms to giant lecture halls.

He is the co-founder of the Boston Vim Meetup, creator of vimuniversity.com,
and author of Speaking for Hackers.

When not demanding that everyone remap caps lock to escape, Ben writes code at
thoughtbot, occasionally correctly.
